def roted(grille):
    
    R = []
    for rowCount in range(4):         #¤Gºû°}¦C
        R.append([0]*4)
    for i in range(0,4):
        for j in range(0,4):
            R[i][j]=grille[3-j][i]
    return R


def recall_password(cipher_grille, ciphered_password):
    answer=""
    for k in range(0,4):
        for i in range(0,4):
            for j in range(0,4):
                if cipher_grille[i][j]=="X":
                   answer+=ciphered_password[i][j]  
        cipher_grille=roted(cipher_grille) 
    

    return answer




if __name__ == '__main__':
    #These "asserts" using only for self-checking and not necessary for auto-testing
    assert recall_password(
        ('X...',
         '..X.',
         'X..X',
         '....'),
        ('itdf',
         'gdce',
         'aton',
         'qrdi')) == 'icantforgetiddqd', 'First example'

    assert recall_password(
        ('....',
         'X..X',
         '.X..',
         '...X'),
        ('xhwc',
         'rsqx',
         'xqzz',
         'fyzr')) == 'rxqrwsfzxqxzhczy', 'Second example'
